# 太陽系の運動と惑星の諸元

太陽系の惑星軌道運動をインタラクティブに可視化し、各惑星の詳細な諸元を学習できるWebアプリケーションです。

## 🌟 特徴

- **CSS3D太陽系表示**: リアルな3D表現と傾斜軌道平面
- **リアルタイム軌道シミュレーション**: ケプラーの法則に基づいた正確な惑星軌道運動
- **インタラクティブな惑星探索**: クリックで各惑星の詳細情報を表示
- **教育的コンテンツ**: 軌道力学の基礎概念を分かりやすく解説
- **惑星比較ツール**: 2つの惑星を選択して特性を比較
- **マウス操作**: ズーム、パン、惑星ホバーによる拡大表示
- **マルチ表示モード**: 2D表示とCSS3D表示の切り替え
- **モダンなUI**: Glassmorphismとコスミックテーマを採用
- **レスポンシブデザイン**: デスクトップ・モバイル対応

## 🚀 技術スタック

- **フロントエンド**: React 18 + TypeScript
- **UIライブラリ**: Material-UI (MUI) v6
- **スタイリング**: Emotion + CSS-in-JS
- **ビルドツール**: Vite
- **フォント**: Space Grotesk + Playfair Display

## 📦 インストール

### 前提条件
- Node.js (v16以上)
- npm または yarn

### セットアップ

1. リポジトリをクローン
```bash
git clone <repository-url>
cd 太陽系
```

2. 依存関係をインストール
```bash
npm install
```

3. 開発サーバーを起動
```bash
npm run dev
```

4. ブラウザで `http://localhost:5173` を開く

## 🎯 使用方法

### 太陽系シミュレーション
- **表示モード切替**: ヘッダーのボタンで2D/CSS3D表示を切り替え
- **マウス操作**:
  - ホイール: ズームイン/アウト（30%〜300%）
  - 惑星ホバー: 拡大表示と惑星名表示
  - 惑星クリック: 詳細情報を表示
- **アニメーション制御**: 右下のボタンで再生/一時停止
- **ズーム操作**: コントロールパネルのボタンでズーム/リセット
- **軌道観察**: 各惑星の軌道速度と傾斜角度の違いを観察

### CSS3D表示機能
- **3D軌道平面**: 各惑星に異なる傾斜角を設定（水星7°、地球0°など）
- **惑星自転**: 各惑星が個別の速度で自転アニメーション
- **立体効果**: パースペクティブと深度によるリアルな3D表現
- **土星の環**: 土星の特徴的な環を3Dで表示

### 惑星探索
- 惑星選択ボタンで任意の惑星の詳細情報を表示
- 距離、質量、温度、衛星数などの諸元を確認

### 惑星比較
- 2つの惑星を選択して特性を比較
- サイズ、質量、軌道距離の比率を計算表示

## 🌍 含まれる惑星

1. **水星 (Mercury)** - 最も太陽に近い惑星
2. **金星 (Venus)** - 最も高温の惑星
3. **地球 (Earth)** - 生命が存在する唯一の惑星
4. **火星 (Mars)** - 赤い惑星
5. **木星 (Jupiter)** - 最大の惑星
6. **土星 (Saturn)** - 美しい環を持つ惑星
7. **天王星 (Uranus)** - 横倒しの惑星
8. **海王星 (Neptune)** - 最も遠い惑星

## 🔬 物理法則

このアプリケーションは以下の物理法則に基づいています：

### ケプラーの法則
1. **第一法則**: 惑星の軌道は楕円で、太陽はその焦点の一つにある
2. **第二法則**: 惑星と太陽を結ぶ線分は等しい時間に等しい面積を描く
3. **第三法則**: 軌道周期の二乗は軌道長半径の三乗に比例する

### 軌道特性
- 太陽に近い惑星ほど高速で軌道運動
- 軌道半径が大きいほど公転周期が長い
- 重力による軌道の安定化

## 📁 プロジェクト構造

```
太陽系/
├── src/
│   ├── components/
│   │   ├── HeroSection.tsx          # ヒーローセクション
│   │   ├── SolarSystemVisualization.tsx # 太陽系可視化
│   │   ├── PlanetExplorer.tsx       # 惑星探索
│   │   ├── PlanetCard.tsx           # 惑星詳細カード
│   │   ├── OrbitalEducation.tsx     # 軌道力学教育
│   │   ├── SolarSystemFacts.tsx     # 太陽系の事実
│   │   └── PlanetComparison.tsx     # 惑星比較ツール
│   ├── App.solarsystem.tsx          # メインアプリケーション
│   ├── theme.ts                     # MUIテーマ設定
│   ├── main.tsx                     # エントリーポイント
│   └── index.css                    # グローバルスタイル
├── package.json
├── vite.config.ts
├── tsconfig.json
└── README.md
```

## 🎨 デザインシステム

### カラーパレット
- **プライマリ**: #6366F1 (コスミックブルー)
- **セカンダリ**: #8B5CF6 (コスミックパープル)
- **アクセント**: #F59E0B (ゴールド)
- **背景**: #0F0F23 (ディープスペース)

### タイポグラフィ
- **見出し**: Playfair Display (セリフ)
- **本文**: Space Grotesk (サンセリフ)

## 🛠️ 開発コマンド

```bash
# 開発サーバー起動
npm run dev

# プロダクションビルド
npm run build

# プレビュー
npm run preview

# リント実行
npm run lint
```

## 📚 学習リソース

このアプリケーションで学べる内容：

- **天体力学**: 惑星の軌道運動の基礎
- **物理学**: ケプラーの法則と万有引力
- **天文学**: 太陽系の構造と惑星の特性
- **数学**: 軌道計算と比例関係

## 🔄 更新履歴

### 2025-10-01 - CSS3D軌道とUIの改善
- **正しい公転運動**: 惑星を球体として表現し、軌道上を正しく公転する動きを修正
- **2D画面の中央配置**: 2D表示モードで太陽系が常に画面の左右中央に配置されるように改善
- **惑星配置の最適化**: CSS3Dにおける惑星の配置ロジックを最適化し、より現実的な表現に
- **自転アニメーションの改善**: 各惑星の自転アニメーションを独立して制御するように変更

### 2025-09-30 - CSS3D太陽系機能の実装
- **CSS3D表示**: CSS3D transformを使用した立体太陽系表示を実装
- **傾斜軌道平面**: 各惑星に現実的な傾斜角を設定（水星7°、地球0°など）
- **惑星自転アニメーション**: 各惑星が個別の速度で自転するアニメーションを追加
- **3D操作機能**: マウスホイールでのズーム（30%〜300%）と惑星ホバーでの拡大表示
- **土星の環**: 土星の特徴的な環を3Dで表示
- **立体効果**: パースペクティブ1500pxによるリアルな3D表現
- **表示モード切替**: 2D表示とCSS3D表示のシームレスな切り替え機能
- **インタラクティブ制御**: 再生/一時停止、ズームイン/アウト、リセットボタン
- **中央配置**: 太陽系画面の完全な中央配置を実現
- **軌道データの修正**: 実際の太陽系のAU比率に基づき軌道サイズを修正
- **正確な公転周期**: 実際の惑星の公転周期データに基づきアニメーション時間を調整

**具体的な変更点**:
- 水星: 0.39 AU (60px) - 88日周期
- 金星: 0.72 AU (90px) - 225日周期
- 地球: 1.00 AU (120px) - 365日周期（基準）
- 火星: 1.52 AU (160px) - 687日周期
- 木星: 5.20 AU (280px) - 12年周期
- 土星: 9.58 AU (380px) - 29年周期
- 天王星: 19.22 AU (460px) - 84年周期
- 海王星: 30.05 AU (520px) - 165年周期

## 🤝 貢献

プロジェクトへの貢献を歓迎します：

1. フォークを作成
2. フィーチャーブランチを作成 (`git checkout -b feature/amazing-feature`)
3. 変更をコミット (`git commit -m 'Add amazing feature'`)
4. ブランチにプッシュ (`git push origin feature/amazing-feature`)
5. プルリクエストを作成

## 📄 ライセンス

このプロジェクトはMITライセンスの下で公開されています。

## 🙏 謝辞

- **NASA**: 惑星画像の提供
- **Unsplash**: 高品質な宇宙画像
- **Material-UI**: 優れたUIコンポーネント
- **React**: 強力なフロントエンドフレームワーク

---

**注意**: このアプリケーションは教育目的で作成されており、実際の軌道計算は簡略化されています。正確な天体位置計算には専門的な天文ソフトウェアをご利用ください。